# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
commit-verify:
  image: ubuntu:20.04
  stage: build
  script:
  - apt-get update
  - apt-get install -yq git wget gnupg
  - wget https://gitlab.com/YottaDB/DB/YDB/-/raw/master/ci/commit_verify.sh
  - chmod +x commit_verify.sh
  - "./commit_verify.sh tools/ci/needs_copyright.sh https://gitlab.com/YottaDB/UI/YDBAdminOpsGUI/"
ydb-gui-test:
  image: ubuntu:20.04
  stage: build
  script:
  - apt-get update
  - export DEBIAN_FRONTEND="noninteractive"
  - apt-get -y install tzdata pkg-config lsof procps
  - apt-get install -y git wget nodejs npm binutils libicu-dev libasound2
  - apt-get install -y libnss3-dev libgdk-pixbuf2.0-dev libgtk-3-dev libxss-dev
  - apt-get install -y libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0
    libgtk-3-0
  - apt-get install -y --no-install-recommends build-essential cmake bison flex xxd
    libreadline-dev libssl-dev libconfig-dev
  - apt-get install -y --no-install-recommends libcmocka-dev
  - apt-get install -y --no-install-recommends default-jdk expect golang-go curl
  - git clone https://github.com/bats-core/bats-core.git
  - "./bats-core/install.sh /usr"
  - wget https://gitlab.com/YottaDB/DB/YDB/raw/master/sr_unix/ydbinstall.sh
  - chmod +x ./ydbinstall.sh
  - "./ydbinstall.sh --utf8 default --verbose --octo"
  - source $(pkg-config --variable=prefix yottadb)/ydb_env_set
  - "./tools/ci/octo_setup.sh"
  - mkdir -p tests/results
  - npm install
  - npm run build
  - export ydb_routines=`$ydb_dist/yottadb -run %XCMD 'W $P($P($ZRO,"(",1,2),")")_"
    "_"$PWD/routines"_")"_$P($ZRO,")",2,$L($ZRO,")"))'`
  - export ydb_zinterrupt="I \$\$JOBEXAM^%YDBWEBZU(\$ZPOSITION)"
  - "$ydb_dist/yottadb -run Start^%YDBWEB"
  - "./tools/ci/test.sh"
  artifacts:
    paths:
    - tests/results
    when: always
    expire_in: 1 month
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
